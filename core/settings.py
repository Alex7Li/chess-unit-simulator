"""
Django settings for API project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
import sys
from dotenv import load_dotenv
import dj_database_url
load_dotenv()
BACKEND_HOST = os.environ.get('BACKEND_HOST', 'localhost')
BACKEND_PORT = os.environ.get('BACKEND_PORT', '8000')
REDIS_HOST = os.environ.get('REDIS_HOST', '127.0.0.1')
REDIS_PORT = os.environ.get('REDIS_PORT', '6379')
CODE_CONVERT_HOST = os.environ.get('CODE_CONVERT_HOST', '127.0.0.1')
CODE_CONVERT_PORT = os.environ.get('CODE_CONVERT_PORT', '3333')
POSTGRES_HOST = os.environ.get('POSTGRES_HOST', 'lumpy-wyvern-4982.g8z.cockroachlabs.cloud')
POSTGRES_PORT = os.environ.get('POSTGRES_PORT', '26257')
POSTGRES_USERNAME = os.environ.get('POSTGRES_USERNAME', 'alex')
POSTGRES_PASSWORD = os.environ.get('POSTGRES_PASSWORD', 'oops_i_exposed_the_password')
POSTGRES_URL = f"postgresql://{POSTGRES_USERNAME}:{POSTGRES_PASSWORD}@{POSTGRES_HOST}:{POSTGRES_PORT}/defaultdb?sslmode=verify-full"

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# /home/alex/git/chess-unit-simulator
BASE_DIR = Path(__file__).resolve().parent.parent


DEBUG = True
USE_TEST_DB = True

# Required for {% if debug %} in templates apparently?
INTERNAL_IPS = (
    '127.0.0.1',
    # '192.168.1.23',
)

with open(BASE_DIR / 'core/secret_key.txt') as f:
    SECRET_KEY = f.read().strip()
# else:
#     SECRET_KEY = 'debug_key'
# For better error message
DEBUG_PROPAGATE_EXCEPTIONS = True
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

ALLOWED_HOSTS = [
    "127.0.0.1",
    "localhost",
    REDIS_HOST,
    POSTGRES_HOST,
]

CORS_ALLOWED_ORIGINS = [
    # 'http://localhost:5173',
    # 'http://127.0.0.1:5173',
    f'http://{REDIS_HOST}:{REDIS_PORT}',
    f'http://{POSTGRES_HOST}:{POSTGRES_PORT}',
    f'http://{CODE_CONVERT_HOST}:{CODE_CONVERT_PORT}',
    f'http://{BACKEND_HOST}:{BACKEND_PORT}',
]

# Application definition
INSTALLED_APPS = [
    'daphne',
    "corsheaders",
    'rest_framework',
    'api.apps.ApiConfig',
    'django.contrib.staticfiles',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    # https://learndjango.com/tutorials/django-signup-tutorial
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'frontend', BASE_DIR / "api" / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
LOGIN_REDIRECT_URL = "/chess"
LOGOUT_REDIRECT_URL = "/accounts/login"


WSGI_APPLICATION = 'core.wsgi.application'
ASGI_APPLICATION = "core.asgi.application"
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [(REDIS_HOST, int(REDIS_PORT))],
        },
    },
}


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
if 'test' in sys.argv or USE_TEST_DB:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': 'db.sqlite',
            'TEST': {
                'NAME': 'mytestdatabase',
            },
        }
    }
else:
    DATABASES = {
        'default': dj_database_url.config(default=POSTGRES_URL, engine='django_cockroachdb'),
    }


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'EST'

USE_I18N = True

USE_TZ = True

VITE_APP_DIR = BASE_DIR / "frontend"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    VITE_APP_DIR / "dist",
    VITE_APP_DIR / "assets",
]
STATIC_ROOT = BASE_DIR / 'static'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR / 'core' / 'static'
# print(f"MEDIA URL {MEDIA_URL} root {MEDIA_ROOT}")